blueprint:
  name: Temperature Drop Notification (Multiple Sensors - Persistent)
  description: Sends a persistent notification when any of the selected temperature sensors drop below a specified threshold, and repeats only if the temperature continues to drop after a set time.
  domain: automation
  input:
    temperature_sensors:
      name: Temperature Sensors
      description: Select one or more temperature sensors to monitor.
      selector:
        target:
          entity:
            domain: sensor
            device_class: temperature
    temperature_threshold:
      name: Temperature Threshold
      description: Minimum temperature below which a notification will be sent.
      default: 18
      selector:
        number:
          min: -20
          max: 50
          unit_of_measurement: Â°C
    notification_message:
      name: Notification Message
      description: The base message that will be sent when the temperature drops below the threshold. Sensor name and current temperature will be added automatically.
      default: "Warning! Temperature has dropped below the threshold."
      selector:
        text:
    delay_between_notifications:
      name: Time Between Notifications (in minutes)
      description: The minimum time (in minutes) between notifications if the temperature keeps dropping.
      default: 30
      selector:
        number:
          min: 1
          max: 120
          unit_of_measurement: minutes

trigger:
  - platform: template
    value_template: >
      {% for entity in expand(target_entities.temperature_sensors) %}
        {% if entity.state | float < temperature_threshold %}
          true
        {% endif %}
      {% endfor %}

variables:
  temperature_sensors: !input temperature_sensors
  temperature_threshold: !input temperature_threshold
  notification_message: !input notification_message
  delay_between_notifications: !input delay_between_notifications

action:
  - alias: "Send Temperature Drop Persistent Notification"
    repeat:
      while: >
        {% for entity in expand(target_entities.temperature_sensors) %}
          {% if entity.state | float < temperature_threshold %}
            true
          {% endif %}
        {% endfor %}
      sequence:
        - alias: "Send Notification for Each Sensor"
          service: persistent_notification.create
          data:
            title: "Temperature Drop Alert"
            message: >
              {% for entity in expand(target_entities.temperature_sensors) %}
                {% if entity.state | float < temperature_threshold %}
                  Sensor {{ entity.name }}: {{ entity.state }}Â°C. {{ notification_message }}
                {% endif %}
              {% endfor %}
        - alias: "Wait for Temperature Drop"
          wait_for_trigger:
            - platform: template
              value_template: >
                {% for entity in expand(target_entities.temperature_sensors) %}
                  {% if entity.state | float < temperature_threshold - 0.5 %}
                    true
                  {% endif %}
                {% endfor %}
          timeout:
            minutes: !input delay_between_notifications
          continue_on_timeout: false
